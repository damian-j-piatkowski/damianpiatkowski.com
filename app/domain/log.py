"""Module for representing and managing log entries.

This module contains the definition of the `Log` class,
which models a log entry in the system.

The `Log` class includes attributes to store details of a log entry
such as its unique identifier (which can be assigned by the database),
severity level, message, and timestamp.

The class-level type hints provide clear indications of the expected data
types for each attribute.

Classes:
- Log: Represents a log entry with attributes for id, level, message, and timestamp.

Example Usage:
    # Creating a new log entry before it's assigned an ID by the database
    new_log_entry = Log(
        level='INFO',
        message='This is an informational log message.'
    )

    # Creating a log entry with an explicit ID (e.g., when retrieving from DB)
    existing_log_entry = Log(
        level='DEBUG',
        message='Debug info.',
        log_id=123,
        timestamp=datetime(2024, 12, 20, 14, 30, tzinfo=timezone.utc)
    )
"""

from datetime import datetime, timezone
from typing import Optional


class Log:
    """Represents a log entry.

    Attributes:
        level: The severity level of the log (e.g., 'INFO', 'WARNING', 'ERROR').
        message: The log message.
        log_id: The unique identifier for the log entry. This is optional upon
                instantiation as it's typically auto-generated by the database.
        timestamp: The UTC timestamp when the log entry was created. Defaults to
                   the current UTC time if not provided.
    """

    log_id: Optional[int]
    level: str
    message: str
    timestamp: Optional[datetime]

    def __init__(
            self,
            level: str,
            message: str,
            log_id: Optional[int] = None,
            timestamp: Optional[datetime] = None,
    ) -> None:
        """
        Constructs all the necessary attributes for the Log object.

        Args:
            level: The severity level of the log.
            message: The log message.
            log_id: The unique identifier for the log entry. This should be
                    `None` for new log entries that will have their ID
                    auto-generated by the database. Defaults to `None`.
            timestamp: The UTC timestamp of the log entry. If `None`, the
                       current UTC time will be used as the timestamp.
        """
        self.log_id = log_id
        self.level = level
        self.message = message
        # Use the provided timestamp or default to the current UTC time
        self.timestamp = timestamp or datetime.now(timezone.utc)